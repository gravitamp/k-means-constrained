package main

import (
	"encoding/csv"
	"os"
	"strconv"
)

func setupData(file string) {
	f, err := os.Open(file)
	if err != nil {
		return
	}
	csvReader := csv.NewReader(f)
	csvData, _ := csvReader.ReadAll()

	//read without header
	for i := 1; i < len(csvData); i++ {
		val, _ := strconv.Atoi(csvData[i][3])
		for j := 0; j < val; j++ {
			lat, _ := strconv.ParseFloat(csvData[i][1], 64)
			lng, _ := strconv.ParseFloat(csvData[i][2], 64)
			d = append(d, Coordinates{
				lng,
				lat,
			})
		}

	}
}

func sum(arr []int) int {
	var res int
	res = 0
	for i := 0; i < len(arr); i++ {
		res += arr[i]
	}
	return res
}

func MinMax(array []int) (int, int) {
	var max int = array[0]
	var min int = array[0]
	for _, value := range array {
		if max < value {
			max = value
		}
		if min > value {
			min = value
		}
	}
	return min, max
}

type RGBA struct {
	R, G, B, A uint8
}

var colour = []RGBA{
	{0xf9, 0x26, 0x72, 0xff},
	{0x89, 0xbd, 0xff, 0xff},
	{0x66, 0xd9, 0xef, 0xff},
	{0x67, 0x21, 0x0c, 0xff},
	{0x7a, 0xcd, 0x10, 0xff},
	{0xaf, 0x61, 0x9f, 0xff},
	{0xfd, 0x97, 0x1f, 0xff},
	{0xdc, 0xc0, 0x60, 0xff},
	{0x54, 0x52, 0x50, 0xff},
	{0x4b, 0x75, 0x09, 0xff},
	{0xff, 0x00, 0xff, 0xff},
	{0xff, 0x23, 0x54, 0xff},
	{0x45, 0x2c, 0x1a, 0xff},
	{0x22, 0x4f, 0x42, 0xff},
	{0x7a, 0xab, 0x23, 0xff},
	{0xaf, 0x00, 0x2f, 0xff},
	{0xfd, 0x09, 0x3c, 0xff},
	{0xdc, 0x88, 0xf9, 0xff},
	{0x54, 0x92, 0x6e, 0xff},
	{0xc3, 0x21, 0x01, 0xff},
}
